{
  "openapi": "3.0.1",
  "info": {
    "title": "SLCT.AI Document Processing API",
    "description": "API for processing and extracting data from documents with speed and reliability",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.slct.ai"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/api/documents": {
      "get": {
        "description": "Returns all documents that the user has access to",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of documents to return",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50,
              "maximum": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of documents to skip for pagination",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter documents by status",
            "schema": {
              "type": "string",
              "enum": ["created", "uploading", "processing", "completed", "failed"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of documents",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "documents": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Document"
                      }
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/Pagination"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/new": {
      "post": {
        "description": "Creates a new document for processing",
        "requestBody": {
          "description": "Document creation details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewDocument"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Document created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "document_id": {
                      "type": "string"
                    },
                    "upload_details": {
                      "$ref": "#/components/schemas/UploadDetails"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/{id}": {
      "get": {
        "description": "Returns a single document by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of document to fetch",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Document details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Document": {
        "type": "object",
        "required": ["id", "status"],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the document"
          },
          "status": {
            "type": "string",
            "enum": ["created", "uploading", "processing", "completed", "failed"],
            "description": "Current status of the document"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of document creation"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of last update"
          },
          "metadata": {
            "type": "object",
            "description": "Custom metadata attached to the document"
          },
          "results": {
            "type": "object",
            "description": "Processing results (only present if status is completed)",
            "properties": {
              "text": {
                "type": "string",
                "description": "Extracted document text"
              },
              "fields": {
                "type": "object",
                "description": "Extracted structured data"
              }
            }
          }
        }
      },
      "NewDocument": {
        "type": "object",
        "required": ["file_size"],
        "properties": {
          "file_size": {
            "type": "integer",
            "description": "Size of the file in bytes"
          },
          "parts": {
            "type": "integer",
            "description": "Number of parts for multipart upload"
          },
          "metadata": {
            "type": "object",
            "description": "Custom metadata to attach to the document"
          }
        }
      },
      "UploadDetails": {
        "type": "object",
        "required": ["upload_id", "bucket", "key", "urls"],
        "properties": {
          "upload_id": {
            "type": "string",
            "description": "Unique identifier for the multipart upload"
          },
          "bucket": {
            "type": "string",
            "description": "S3 bucket name"
          },
          "key": {
            "type": "string",
            "description": "S3 object key"
          },
          "urls": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "part_number": {
                  "type": "integer",
                  "description": "Part number for multipart upload"
                },
                "signed_url": {
                  "type": "string",
                  "description": "Pre-signed URL for uploading this part"
                }
              }
            }
          }
        }
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "description": "Total number of documents"
          },
          "limit": {
            "type": "integer",
            "description": "Current page size"
          },
          "offset": {
            "type": "integer",
            "description": "Current offset"
          },
          "has_more": {
            "type": "boolean",
            "description": "Whether there are more documents"
          }
        }
      },
      "Error": {
        "type": "object",
        "required": ["code", "message"],
        "properties": {
          "code": {
            "type": "string",
            "description": "Error code"
          },
          "message": {
            "type": "string",
            "description": "Error message"
          },
          "details": {
            "type": "object",
            "description": "Additional error context"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}